使用numpy完成MNIST手写数据集的分类
数据集MNIST 手写数字数据集（10个类别 0-9）。
    总样本 70,000，灰度图像 (28x28 像素 = 784 特征)。
    数据划分分层抽样：80% 训练集 (56,000)，20% 测试集 (14,000)。
    要求：保持原始类别比例。

1. 数据预处理
    归一化：使用均值归一化。
    划分：创建分层训练集-测试集划分。
    清洗：妥善处理缺失值或异常值（如果存在）。

2. 算法要求
    A. 多类别逻辑回归,实现 Softmax 激活函数。添加 L2 正则化。使用梯度下降法优化。
    B. 多层感知器（MLP）,模块化的 Layer 类。至少包含一个隐藏层。
        隐藏层：ReLU 激活。输出层：Softmax 激活。实现前向传播、反向传播。应用交叉熵损失。
    C. K近邻算法（KNN）,实现欧氏距离计算。优化最近邻搜索。尝试不同的 k 值。
    D. 决策树（Decision Tree）,利用熵实现信息增益。构建递归树构造算法。
        包含深度限制（正则化）。处理连续特征和多分类结果。

3. 评估指标
    准确率
    精确率、召回率和F1分数
    平均F1分数：宏观平均 F1 和加权平均 F1
    混淆矩阵